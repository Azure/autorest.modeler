{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "info": {
    "title": "Swagger With Validation",
    "description": "Some cool documentation.",
    "version": "2014-04-01-preview"
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/{id}/Redis?api-version={apiVersion}": {
      "get": {
        "operationId": "list",
        "summary": "Product Types",
        "description": "The Products endpoint returns information about the Uber products offered at a given location. The response includes the display name and other details about each product, and lists the products in the proper display order.",
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParamterer"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource Group Name.",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 100,
              "maximum": 1000,
              "minLength": 3,
              "maxLength": 10,
              "multipleOf": 10,
              "minItems": 1,
              "maxItems": 1,
              "uniqueItems": true,
              "pattern": "[a-zA-Z0-9]+"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Resource Group ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 100,
              "maximum": 1000,
              "minLength": 1,
              "maxLength": 1,
              "multipleOf": 10,
              "minItems": 1,
              "maxItems": 1,
              "uniqueItems": true,
              "pattern": "[0-9]+"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "name": "myintconst",
            "in": "query",
            "description": "Constant query param.",
            "required": true,
            "schema": {
              "type": "integer",
              "enum": [
                0
              ]
            }
          },
          {
            "name": "mystrconst",
            "in": "query",
            "description": "Constant query param.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "constant"
              ]
            }
          }
        ],
        "tags": [
          "Redis"
        ],
        "responses": {
          "200": {
            "description": "A list of caches",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "description": "The product documentation.",
        "required": [
          "myintconst",
          "mystrconst",
          "RefStrEnumRequiredConstant",
          "RefIntEnumRequiredConstant"
        ],
        "properties": {
          "product_id": {
            "type": "string",
            "description": "Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles."
          },
          "description": {
            "type": "string",
            "description": "Description of product."
          },
          "display_names": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Display names of product.",
            "maxItems": 6,
            "uniqueItems": true,
            "minItems": 0,
            "multipleOf": 10,
            "maximum": 1000,
            "minimum": 100,
            "minLength": 1,
            "maxLength": 1,
            "pattern": "[0-9]+"
          },
          "capacity": {
            "type": "integer",
            "description": "Capacity of product. For example, 4 people.",
            "exclusiveMinimum": true,
            "exclusiveMaximum": true,
            "maximum": 100,
            "minimum": 0
          },
          "image": {
            "type": "string",
            "description": "Image URL representing the product.",
            "pattern": "http://\\w+"
          },
          "myintconst": {
            "type": "integer",
            "description": "Constant int.",
            "enum": [
              0
            ]
          },
          "mystrconst": {
            "type": "string",
            "description": "Constant string.",
            "enum": [
              "constant"
            ]
          },
          "RefStrEnumRequiredConstant": {
            "$ref": "#/components/schemas/RefStrEnum",
            "description": "RefStrEnumRequiredConstant Description."
          },
          "RefIntEnumRequiredConstant": {
            "$ref": "#/components/schemas/RefIntEnum",
            "description": "RefIntEnumRequiredConstant Description."
          },
          "RefStrEnum": {
            "$ref": "#/components/schemas/RefStrEnum",
            "description": "RefStrEnumRequiredConstant Description."
          },
          "RefIntEnum": {
            "$ref": "#/components/schemas/RefIntEnum",
            "description": "RefIntEnumRequiredConstant Description."
          },
          "example": {
            "name": "Puma",
            "id": 1
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          }
        }
      },
      "RefStrEnum": {
        "type": "string",
        "enum": [
          "ReferenceEnum1"
        ],
        "description": "RefStrEnum Description."
      },
      "RefIntEnum": {
        "type": "integer",
        "enum": [
          0
        ],
        "description": "RefIntEnum Description."
      }
    },
    "parameters": {
      "SubscriptionIdParamterer": {
        "name": "subscriptionId",
        "in": "path",
        "description": "Subscription ID.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ApiVersionParameter": {
        "name": "apiVersion",
        "in": "query",
        "description": "API ID.",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "\\d{2}-\\d{2}-\\d{4}"
        }
      }
    }
  }
}