---
$id: '1'
apiVersion: '2016-02-29'
baseUrl: 'http://localhost:3000'
documentation: Test Infrastructure for AutoRest
enumTypes:
  - $ref: '33'
  - $ref: '169'
errorTypes:
  - $ref: '2'
modelTypes:
  - $id: '2'
    $type: CompositeType
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '15'
      fixed: false
      raw: Error
    properties:
      - $id: '3'
        collectionFormat: none
        defaultValue:
          $id: '4'
          fixed: false
        deprecated: false
        documentation:
          $id: '5'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '7'
          $type: PrimaryType
          deprecated: false
          format: int32
          knownPrimaryType: int
          name:
            $id: '8'
            fixed: false
            raw: Int
        name:
          $id: '6'
          fixed: false
          raw: status
        realPath:
          - status
        serializedName: status
      - $id: '9'
        collectionFormat: none
        defaultValue:
          $id: '10'
          fixed: false
        deprecated: false
        documentation:
          $id: '11'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '13'
          $type: PrimaryType
          deprecated: false
          knownPrimaryType: string
          name:
            $id: '14'
            fixed: false
            raw: String
        name:
          $id: '12'
          fixed: false
          raw: message
        realPath:
          - message
        serializedName: message
    serializedName: Error
  - $id: '16'
    $type: CompositeType
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '41'
      fixed: false
      raw: basic
    properties:
      - $id: '17'
        collectionFormat: none
        defaultValue:
          $id: '18'
          fixed: false
        deprecated: false
        documentation:
          $id: '19'
          fixed: false
          raw: Basic Id
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '21'
          $type: PrimaryType
          deprecated: false
          knownPrimaryType: int
          name:
            $id: '22'
            fixed: false
            raw: Int
        name:
          $id: '20'
          fixed: false
          raw: id
        realPath:
          - id
        serializedName: id
      - $id: '23'
        collectionFormat: none
        defaultValue:
          $id: '24'
          fixed: false
        deprecated: false
        documentation:
          $id: '25'
          fixed: false
          raw: >-
            Name property with a very long description that does not fit on a
            single line and a line break.
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '27'
          $type: PrimaryType
          deprecated: false
          knownPrimaryType: string
          name:
            $id: '28'
            fixed: false
            raw: String
        name:
          $id: '26'
          fixed: false
          raw: name
        realPath:
          - name
        serializedName: name
      - $id: '29'
        collectionFormat: none
        defaultValue:
          $id: '30'
          fixed: false
        deprecated: false
        documentation:
          $id: '31'
          fixed: false
        extensions:
          x-ms-enum:
            modelAsString: true
            name: CMYKColors
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '33'
          $type: EnumType
          deprecated: false
          modelAsString: true
          name:
            $id: '40'
            fixed: false
            raw: CMYKColors
          oldModelAsString: false
          underlyingType:
            $id: '38'
            $type: PrimaryType
            deprecated: false
            knownPrimaryType: string
            name:
              $id: '39'
              fixed: false
              raw: String
          values:
            - $id: '34'
              name: cyan
              serializedName: cyan
            - $id: '35'
              name: Magenta
              serializedName: Magenta
            - $id: '36'
              name: YELLOW
              serializedName: YELLOW
            - $id: '37'
              name: blacK
              serializedName: blacK
        name:
          $id: '32'
          fixed: false
          raw: color
        realPath:
          - color
        serializedName: color
    serializedName: basic
  - $id: '42'
    $type: CompositeType
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '55'
      fixed: false
      raw: pet
    properties:
      - $id: '43'
        collectionFormat: none
        defaultValue:
          $id: '44'
          fixed: false
        deprecated: false
        documentation:
          $id: '45'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '47'
          $type: PrimaryType
          deprecated: false
          knownPrimaryType: int
          name:
            $id: '48'
            fixed: false
            raw: Int
        name:
          $id: '46'
          fixed: false
          raw: id
        realPath:
          - id
        serializedName: id
      - $id: '49'
        collectionFormat: none
        defaultValue:
          $id: '50'
          fixed: false
        deprecated: false
        documentation:
          $id: '51'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '53'
          $type: PrimaryType
          deprecated: false
          knownPrimaryType: string
          name:
            $id: '54'
            fixed: false
            raw: String
        name:
          $id: '52'
          fixed: false
          raw: name
        realPath:
          - name
        serializedName: name
    serializedName: pet
  - $id: '56'
    $type: CompositeType
    baseModelType:
      $ref: '42'
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '63'
      fixed: false
      raw: dog
    properties:
      - $id: '57'
        collectionFormat: none
        defaultValue:
          $id: '58'
          fixed: false
        deprecated: false
        documentation:
          $id: '59'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '61'
          $type: PrimaryType
          deprecated: false
          knownPrimaryType: string
          name:
            $id: '62'
            fixed: false
            raw: String
        name:
          $id: '60'
          fixed: false
          raw: food
        realPath:
          - food
        serializedName: food
    serializedName: dog
  - $id: '64'
    $type: CompositeType
    baseModelType:
      $ref: '42'
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '77'
      fixed: false
      raw: cat
    properties:
      - $id: '65'
        collectionFormat: none
        defaultValue:
          $id: '66'
          fixed: false
        deprecated: false
        documentation:
          $id: '67'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '69'
          $type: PrimaryType
          deprecated: false
          knownPrimaryType: string
          name:
            $id: '70'
            fixed: false
            raw: String
        name:
          $id: '68'
          fixed: false
          raw: color
        realPath:
          - color
        serializedName: color
      - $id: '71'
        collectionFormat: none
        defaultValue:
          $id: '72'
          fixed: false
        deprecated: false
        documentation:
          $id: '73'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '75'
          $type: SequenceType
          deprecated: false
          elementType:
            $ref: '56'
          name:
            $id: '76'
            fixed: false
        name:
          $id: '74'
          fixed: false
          raw: hates
        realPath:
          - hates
        serializedName: hates
    serializedName: cat
  - $id: '78'
    $type: CompositeType
    baseModelType:
      $ref: '64'
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '85'
      fixed: false
      raw: siamese
    properties:
      - $id: '79'
        collectionFormat: none
        defaultValue:
          $id: '80'
          fixed: false
        deprecated: false
        documentation:
          $id: '81'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '83'
          $type: PrimaryType
          deprecated: false
          knownPrimaryType: string
          name:
            $id: '84'
            fixed: false
            raw: String
        name:
          $id: '82'
          fixed: false
          raw: breed
        realPath:
          - breed
        serializedName: breed
    serializedName: siamese
  - $id: '86'
    $type: CompositeType
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '105'
      fixed: false
      raw: Fish
    polymorphicDiscriminator: fishtype
    properties:
      - $id: '87'
        collectionFormat: none
        defaultValue:
          $id: '88'
          fixed: false
        deprecated: false
        documentation:
          $id: '89'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '91'
          $type: PrimaryType
          deprecated: false
          knownPrimaryType: string
          name:
            $id: '92'
            fixed: false
            raw: String
        name:
          $id: '90'
          fixed: false
          raw: species
        realPath:
          - species
        serializedName: species
      - $id: '93'
        collectionFormat: none
        defaultValue:
          $id: '94'
          fixed: false
        deprecated: false
        documentation:
          $id: '95'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: true
        modelType:
          $id: '97'
          $type: PrimaryType
          deprecated: false
          format: float
          knownPrimaryType: double
          name:
            $id: '98'
            fixed: false
            raw: Double
        name:
          $id: '96'
          fixed: false
          raw: length
        realPath:
          - length
        serializedName: length
      - $id: '99'
        collectionFormat: none
        defaultValue:
          $id: '100'
          fixed: false
        deprecated: false
        documentation:
          $id: '101'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '103'
          $type: SequenceType
          deprecated: false
          elementType:
            $ref: '86'
          name:
            $id: '104'
            fixed: false
        name:
          $id: '102'
          fixed: false
          raw: siblings
        realPath:
          - siblings
        serializedName: siblings
    serializedName: Fish
  - $id: '106'
    $type: CompositeType
    baseModelType:
      $ref: '86'
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '119'
      fixed: false
      raw: salmon
    properties:
      - $id: '107'
        collectionFormat: none
        defaultValue:
          $id: '108'
          fixed: false
        deprecated: false
        documentation:
          $id: '109'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '111'
          $type: PrimaryType
          deprecated: false
          knownPrimaryType: string
          name:
            $id: '112'
            fixed: false
            raw: String
        name:
          $id: '110'
          fixed: false
          raw: location
        realPath:
          - location
        serializedName: location
      - $id: '113'
        collectionFormat: none
        defaultValue:
          $id: '114'
          fixed: false
        deprecated: false
        documentation:
          $id: '115'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '117'
          $type: PrimaryType
          deprecated: false
          knownPrimaryType: boolean
          name:
            $id: '118'
            fixed: false
            raw: Boolean
        name:
          $id: '116'
          fixed: false
          raw: iswild
        realPath:
          - iswild
        serializedName: iswild
    serializedName: salmon
  - $id: '120'
    $type: CompositeType
    baseModelType:
      $ref: '106'
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '135'
      fixed: false
      raw: smart_salmon
    properties:
      - $id: '121'
        collectionFormat: none
        defaultValue:
          $id: '122'
          fixed: false
        deprecated: false
        documentation:
          $id: '123'
          fixed: false
          raw: >-
            Unmatched properties from the message are deserialized this
            collection
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '125'
          $type: DictionaryType
          deprecated: false
          name:
            $id: '128'
            fixed: false
          supportsAdditionalProperties: true
          valueType:
            $id: '126'
            $type: PrimaryType
            deprecated: false
            knownPrimaryType: object
            name:
              $id: '127'
              fixed: false
              raw: Object
        name:
          $id: '124'
          fixed: false
          raw: additionalProperties
      - $id: '129'
        collectionFormat: none
        defaultValue:
          $id: '130'
          fixed: false
        deprecated: false
        documentation:
          $id: '131'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '133'
          $type: PrimaryType
          deprecated: false
          knownPrimaryType: string
          name:
            $id: '134'
            fixed: false
            raw: String
        name:
          $id: '132'
          fixed: false
          raw: college_degree
        realPath:
          - college_degree
        serializedName: college_degree
    serializedName: smart_salmon
  - $id: '136'
    $type: CompositeType
    baseModelType:
      $ref: '86'
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '149'
      fixed: false
      raw: shark
    properties:
      - $id: '137'
        collectionFormat: none
        defaultValue:
          $id: '138'
          fixed: false
        deprecated: false
        documentation:
          $id: '139'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '141'
          $type: PrimaryType
          deprecated: false
          format: int32
          knownPrimaryType: int
          name:
            $id: '142'
            fixed: false
            raw: Int
        name:
          $id: '140'
          fixed: false
          raw: age
        realPath:
          - age
        serializedName: age
      - $id: '143'
        collectionFormat: none
        defaultValue:
          $id: '144'
          fixed: false
        deprecated: false
        documentation:
          $id: '145'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: true
        modelType:
          $id: '147'
          $type: PrimaryType
          deprecated: false
          format: date-time
          knownPrimaryType: dateTime
          name:
            $id: '148'
            fixed: false
            raw: DateTime
        name:
          $id: '146'
          fixed: false
          raw: birthday
        realPath:
          - birthday
        serializedName: birthday
    serializedName: shark
  - $id: '150'
    $type: CompositeType
    baseModelType:
      $ref: '136'
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '157'
      fixed: false
      raw: sawshark
    properties:
      - $id: '151'
        collectionFormat: none
        defaultValue:
          $id: '152'
          fixed: false
        deprecated: false
        documentation:
          $id: '153'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '155'
          $type: PrimaryType
          deprecated: false
          format: byte
          knownPrimaryType: byteArray
          name:
            $id: '156'
            fixed: false
            raw: ByteArray
        name:
          $id: '154'
          fixed: false
          raw: picture
        realPath:
          - picture
        serializedName: picture
    serializedName: sawshark
  - $id: '158'
    $type: CompositeType
    baseModelType:
      $ref: '136'
    containsConstantProperties: false
    deprecated: false
    extensions:
      x-ms-discriminator-value: goblin
    name:
      $id: '176'
      fixed: false
      raw: goblinshark
    properties:
      - $id: '159'
        collectionFormat: none
        defaultValue:
          $id: '160'
          fixed: false
        deprecated: false
        documentation:
          $id: '161'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '163'
          $type: PrimaryType
          deprecated: false
          knownPrimaryType: int
          name:
            $id: '164'
            fixed: false
            raw: Int
        name:
          $id: '162'
          fixed: false
          raw: jawsize
        realPath:
          - jawsize
        serializedName: jawsize
      - $id: '165'
        collectionFormat: none
        defaultValue:
          $id: '166'
          fixed: false
          raw: gray
        deprecated: false
        documentation:
          $id: '167'
          fixed: false
          raw: Colors possible
        extensions:
          x-ms-enum:
            modelAsString: true
            name: GoblinSharkColor
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '169'
          $type: EnumType
          deprecated: false
          modelAsString: true
          name:
            $id: '175'
            fixed: false
            raw: GoblinSharkColor
          oldModelAsString: false
          underlyingType:
            $id: '173'
            $type: PrimaryType
            deprecated: false
            knownPrimaryType: string
            name:
              $id: '174'
              fixed: false
              raw: String
          values:
            - $id: '170'
              name: pink
              serializedName: pink
            - $id: '171'
              name: gray
              serializedName: gray
            - $id: '172'
              name: brown
              serializedName: brown
        name:
          $id: '168'
          fixed: false
          raw: color
        realPath:
          - color
        serializedName: color
    serializedName: goblin
  - $id: '177'
    $type: CompositeType
    baseModelType:
      $ref: '136'
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '178'
      fixed: false
      raw: cookiecuttershark
    serializedName: cookiecuttershark
  - $id: '179'
    $type: CompositeType
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '192'
      fixed: false
      raw: int-wrapper
    properties:
      - $id: '180'
        collectionFormat: none
        defaultValue:
          $id: '181'
          fixed: false
        deprecated: false
        documentation:
          $id: '182'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '184'
          $type: PrimaryType
          deprecated: false
          format: int32
          knownPrimaryType: int
          name:
            $id: '185'
            fixed: false
            raw: Int
        name:
          $id: '183'
          fixed: false
          raw: field1
        realPath:
          - field1
        serializedName: field1
      - $id: '186'
        collectionFormat: none
        defaultValue:
          $id: '187'
          fixed: false
        deprecated: false
        documentation:
          $id: '188'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '190'
          $type: PrimaryType
          deprecated: false
          format: int32
          knownPrimaryType: int
          name:
            $id: '191'
            fixed: false
            raw: Int
        name:
          $id: '189'
          fixed: false
          raw: field2
        realPath:
          - field2
        serializedName: field2
    serializedName: int-wrapper
  - $id: '193'
    $type: CompositeType
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '206'
      fixed: false
      raw: long-wrapper
    properties:
      - $id: '194'
        collectionFormat: none
        defaultValue:
          $id: '195'
          fixed: false
        deprecated: false
        documentation:
          $id: '196'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '198'
          $type: PrimaryType
          deprecated: false
          format: int64
          knownPrimaryType: long
          name:
            $id: '199'
            fixed: false
            raw: Long
        name:
          $id: '197'
          fixed: false
          raw: field1
        realPath:
          - field1
        serializedName: field1
      - $id: '200'
        collectionFormat: none
        defaultValue:
          $id: '201'
          fixed: false
        deprecated: false
        documentation:
          $id: '202'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '204'
          $type: PrimaryType
          deprecated: false
          format: int64
          knownPrimaryType: long
          name:
            $id: '205'
            fixed: false
            raw: Long
        name:
          $id: '203'
          fixed: false
          raw: field2
        realPath:
          - field2
        serializedName: field2
    serializedName: long-wrapper
  - $id: '207'
    $type: CompositeType
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '220'
      fixed: false
      raw: float-wrapper
    properties:
      - $id: '208'
        collectionFormat: none
        defaultValue:
          $id: '209'
          fixed: false
        deprecated: false
        documentation:
          $id: '210'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '212'
          $type: PrimaryType
          deprecated: false
          format: float
          knownPrimaryType: double
          name:
            $id: '213'
            fixed: false
            raw: Double
        name:
          $id: '211'
          fixed: false
          raw: field1
        realPath:
          - field1
        serializedName: field1
      - $id: '214'
        collectionFormat: none
        defaultValue:
          $id: '215'
          fixed: false
        deprecated: false
        documentation:
          $id: '216'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '218'
          $type: PrimaryType
          deprecated: false
          format: float
          knownPrimaryType: double
          name:
            $id: '219'
            fixed: false
            raw: Double
        name:
          $id: '217'
          fixed: false
          raw: field2
        realPath:
          - field2
        serializedName: field2
    serializedName: float-wrapper
  - $id: '221'
    $type: CompositeType
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '234'
      fixed: false
      raw: double-wrapper
    properties:
      - $id: '222'
        collectionFormat: none
        defaultValue:
          $id: '223'
          fixed: false
        deprecated: false
        documentation:
          $id: '224'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '226'
          $type: PrimaryType
          deprecated: false
          format: double
          knownPrimaryType: double
          name:
            $id: '227'
            fixed: false
            raw: Double
        name:
          $id: '225'
          fixed: false
          raw: field1
        realPath:
          - field1
        serializedName: field1
      - $id: '228'
        collectionFormat: none
        defaultValue:
          $id: '229'
          fixed: false
        deprecated: false
        documentation:
          $id: '230'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '232'
          $type: PrimaryType
          deprecated: false
          format: double
          knownPrimaryType: double
          name:
            $id: '233'
            fixed: false
            raw: Double
        name:
          $id: '231'
          fixed: false
          raw: >-
            field_56_zeros_after_the_dot_and_negative_zero_before_dot_and_this_is_a_long_field_name_on_purpose
        realPath:
          - >-
            field_56_zeros_after_the_dot_and_negative_zero_before_dot_and_this_is_a_long_field_name_on_purpose
        serializedName: >-
          field_56_zeros_after_the_dot_and_negative_zero_before_dot_and_this_is_a_long_field_name_on_purpose
    serializedName: double-wrapper
  - $id: '235'
    $type: CompositeType
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '248'
      fixed: false
      raw: boolean-wrapper
    properties:
      - $id: '236'
        collectionFormat: none
        defaultValue:
          $id: '237'
          fixed: false
        deprecated: false
        documentation:
          $id: '238'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '240'
          $type: PrimaryType
          deprecated: false
          knownPrimaryType: boolean
          name:
            $id: '241'
            fixed: false
            raw: Boolean
        name:
          $id: '239'
          fixed: false
          raw: field_true
        realPath:
          - field_true
        serializedName: field_true
      - $id: '242'
        collectionFormat: none
        defaultValue:
          $id: '243'
          fixed: false
        deprecated: false
        documentation:
          $id: '244'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '246'
          $type: PrimaryType
          deprecated: false
          knownPrimaryType: boolean
          name:
            $id: '247'
            fixed: false
            raw: Boolean
        name:
          $id: '245'
          fixed: false
          raw: field_false
        realPath:
          - field_false
        serializedName: field_false
    serializedName: boolean-wrapper
  - $id: '249'
    $type: CompositeType
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '268'
      fixed: false
      raw: string-wrapper
    properties:
      - $id: '250'
        collectionFormat: none
        defaultValue:
          $id: '251'
          fixed: false
        deprecated: false
        documentation:
          $id: '252'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '254'
          $type: PrimaryType
          deprecated: false
          knownPrimaryType: string
          name:
            $id: '255'
            fixed: false
            raw: String
        name:
          $id: '253'
          fixed: false
          raw: field
        realPath:
          - field
        serializedName: field
      - $id: '256'
        collectionFormat: none
        defaultValue:
          $id: '257'
          fixed: false
        deprecated: false
        documentation:
          $id: '258'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '260'
          $type: PrimaryType
          deprecated: false
          knownPrimaryType: string
          name:
            $id: '261'
            fixed: false
            raw: String
        name:
          $id: '259'
          fixed: false
          raw: empty
        realPath:
          - empty
        serializedName: empty
      - $id: '262'
        collectionFormat: none
        defaultValue:
          $id: '263'
          fixed: false
        deprecated: false
        documentation:
          $id: '264'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '266'
          $type: PrimaryType
          deprecated: false
          knownPrimaryType: string
          name:
            $id: '267'
            fixed: false
            raw: String
        name:
          $id: '265'
          fixed: false
          raw: 'null'
        realPath:
          - 'null'
        serializedName: 'null'
    serializedName: string-wrapper
  - $id: '269'
    $type: CompositeType
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '282'
      fixed: false
      raw: date-wrapper
    properties:
      - $id: '270'
        collectionFormat: none
        defaultValue:
          $id: '271'
          fixed: false
        deprecated: false
        documentation:
          $id: '272'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '274'
          $type: PrimaryType
          deprecated: false
          format: date
          knownPrimaryType: date
          name:
            $id: '275'
            fixed: false
            raw: Date
        name:
          $id: '273'
          fixed: false
          raw: field
        realPath:
          - field
        serializedName: field
      - $id: '276'
        collectionFormat: none
        defaultValue:
          $id: '277'
          fixed: false
        deprecated: false
        documentation:
          $id: '278'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '280'
          $type: PrimaryType
          deprecated: false
          format: date
          knownPrimaryType: date
          name:
            $id: '281'
            fixed: false
            raw: Date
        name:
          $id: '279'
          fixed: false
          raw: leap
        realPath:
          - leap
        serializedName: leap
    serializedName: date-wrapper
  - $id: '283'
    $type: CompositeType
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '296'
      fixed: false
      raw: datetime-wrapper
    properties:
      - $id: '284'
        collectionFormat: none
        defaultValue:
          $id: '285'
          fixed: false
        deprecated: false
        documentation:
          $id: '286'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '288'
          $type: PrimaryType
          deprecated: false
          format: date-time
          knownPrimaryType: dateTime
          name:
            $id: '289'
            fixed: false
            raw: DateTime
        name:
          $id: '287'
          fixed: false
          raw: field
        realPath:
          - field
        serializedName: field
      - $id: '290'
        collectionFormat: none
        defaultValue:
          $id: '291'
          fixed: false
        deprecated: false
        documentation:
          $id: '292'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '294'
          $type: PrimaryType
          deprecated: false
          format: date-time
          knownPrimaryType: dateTime
          name:
            $id: '295'
            fixed: false
            raw: DateTime
        name:
          $id: '293'
          fixed: false
          raw: now
        realPath:
          - now
        serializedName: now
    serializedName: datetime-wrapper
  - $id: '297'
    $type: CompositeType
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '310'
      fixed: false
      raw: datetimerfc1123-wrapper
    properties:
      - $id: '298'
        collectionFormat: none
        defaultValue:
          $id: '299'
          fixed: false
        deprecated: false
        documentation:
          $id: '300'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '302'
          $type: PrimaryType
          deprecated: false
          format: date-time-rfc1123
          knownPrimaryType: dateTimeRfc1123
          name:
            $id: '303'
            fixed: false
            raw: DateTimeRfc1123
        name:
          $id: '301'
          fixed: false
          raw: field
        realPath:
          - field
        serializedName: field
      - $id: '304'
        collectionFormat: none
        defaultValue:
          $id: '305'
          fixed: false
        deprecated: false
        documentation:
          $id: '306'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '308'
          $type: PrimaryType
          deprecated: false
          format: date-time-rfc1123
          knownPrimaryType: dateTimeRfc1123
          name:
            $id: '309'
            fixed: false
            raw: DateTimeRfc1123
        name:
          $id: '307'
          fixed: false
          raw: now
        realPath:
          - now
        serializedName: now
    serializedName: datetimerfc1123-wrapper
  - $id: '311'
    $type: CompositeType
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '318'
      fixed: false
      raw: duration-wrapper
    properties:
      - $id: '312'
        collectionFormat: none
        defaultValue:
          $id: '313'
          fixed: false
        deprecated: false
        documentation:
          $id: '314'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '316'
          $type: PrimaryType
          deprecated: false
          format: duration
          knownPrimaryType: timeSpan
          name:
            $id: '317'
            fixed: false
            raw: TimeSpan
        name:
          $id: '315'
          fixed: false
          raw: field
        realPath:
          - field
        serializedName: field
    serializedName: duration-wrapper
  - $id: '319'
    $type: CompositeType
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '326'
      fixed: false
      raw: byte-wrapper
    properties:
      - $id: '320'
        collectionFormat: none
        defaultValue:
          $id: '321'
          fixed: false
        deprecated: false
        documentation:
          $id: '322'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '324'
          $type: PrimaryType
          deprecated: false
          format: byte
          knownPrimaryType: byteArray
          name:
            $id: '325'
            fixed: false
            raw: ByteArray
        name:
          $id: '323'
          fixed: false
          raw: field
        realPath:
          - field
        serializedName: field
    serializedName: byte-wrapper
  - $id: '327'
    $type: CompositeType
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '336'
      fixed: false
      raw: array-wrapper
    properties:
      - $id: '328'
        collectionFormat: none
        defaultValue:
          $id: '329'
          fixed: false
        deprecated: false
        documentation:
          $id: '330'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '332'
          $type: SequenceType
          deprecated: false
          elementType:
            $id: '333'
            $type: PrimaryType
            deprecated: false
            knownPrimaryType: string
            name:
              $id: '334'
              fixed: false
              raw: String
          name:
            $id: '335'
            fixed: false
        name:
          $id: '331'
          fixed: false
          raw: array
        realPath:
          - array
        serializedName: array
    serializedName: array-wrapper
  - $id: '337'
    $type: CompositeType
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '346'
      fixed: false
      raw: dictionary-wrapper
    properties:
      - $id: '338'
        collectionFormat: none
        defaultValue:
          $id: '339'
          fixed: false
        deprecated: false
        documentation:
          $id: '340'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '342'
          $type: DictionaryType
          deprecated: false
          name:
            $id: '345'
            fixed: false
          supportsAdditionalProperties: false
          valueType:
            $id: '343'
            $type: PrimaryType
            deprecated: false
            knownPrimaryType: string
            name:
              $id: '344'
              fixed: false
              raw: String
        name:
          $id: '341'
          fixed: false
          raw: defaultProgram
        realPath:
          - defaultProgram
        serializedName: defaultProgram
    serializedName: dictionary-wrapper
  - $id: '347'
    $type: CompositeType
    containsConstantProperties: false
    deprecated: false
    name:
      $id: '360'
      fixed: false
      raw: readonly-obj
    properties:
      - $id: '348'
        collectionFormat: none
        defaultValue:
          $id: '349'
          fixed: false
        deprecated: false
        documentation:
          $id: '350'
          fixed: false
        isConstant: false
        isReadOnly: true
        isRequired: false
        modelType:
          $id: '352'
          $type: PrimaryType
          deprecated: false
          knownPrimaryType: string
          name:
            $id: '353'
            fixed: false
            raw: String
        name:
          $id: '351'
          fixed: false
          raw: id
        realPath:
          - id
        serializedName: id
      - $id: '354'
        collectionFormat: none
        defaultValue:
          $id: '355'
          fixed: false
        deprecated: false
        documentation:
          $id: '356'
          fixed: false
        isConstant: false
        isReadOnly: false
        isRequired: false
        modelType:
          $id: '358'
          $type: PrimaryType
          deprecated: false
          format: int32
          knownPrimaryType: int
          name:
            $id: '359'
            fixed: false
            raw: Int
        name:
          $id: '357'
          fixed: false
          raw: size
        realPath:
          - size
        serializedName: size
    serializedName: readonly-obj
modelsName: Models
name: AutoRestComplexTestService
namespace: ''
operations:
  - $id: '367'
    methods:
      - $id: '368'
        defaultResponse:
          $id: '372'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: 'Get complex type {id: 2, name: ''abc'', color: ''YELLOW''}'
        group:
          $id: '370'
          fixed: false
          raw: basic
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '369'
          fixed: false
          raw: getValid
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '371'
            body:
              $ref: '16'
            isNullable: true
        returnType:
          $id: '373'
          body:
            $ref: '16'
          isNullable: true
        serializedName: basic_getValid
        url: /complex/basic/valid
      - $id: '374'
        defaultResponse:
          $id: '388'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: 'Please put {id: 2, name: ''abc'', color: ''Magenta''}'
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '386'
          fixed: false
          raw: basic
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '385'
          fixed: false
          raw: putValid
        parameters:
          - $id: '375'
            collectionFormat: none
            defaultValue:
              $id: '376'
              fixed: false
            deprecated: false
            documentation:
              $id: '377'
              fixed: false
              raw: 'Please put {id: 2, name: ''abc'', color: ''Magenta''}'
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '16'
            name:
              $id: '378'
              fixed: false
              raw: complexBody
            serializedName: complexBody
          - $id: '379'
            clientProperty:
              $ref: '361'
            collectionFormat: none
            defaultValue:
              $id: '380'
              fixed: false
              raw: 2014-04-01-preview
            deprecated: false
            documentation:
              $id: '381'
              fixed: false
              raw: API ID.
            isConstant: true
            isRequired: true
            location: query
            modelType:
              $id: '383'
              $type: PrimaryType
              deprecated: false
              knownPrimaryType: string
              name:
                $id: '384'
                fixed: false
                raw: String
            name:
              $id: '382'
              fixed: false
              raw: api-version
            serializedName: api-version
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '387'
            isNullable: true
        returnType:
          $id: '389'
          isNullable: true
        serializedName: basic_putValid
        url: /complex/basic/valid
      - $id: '390'
        defaultResponse:
          $id: '394'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get a basic complex type that is invalid for the local strong type
        group:
          $id: '392'
          fixed: false
          raw: basic
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '391'
          fixed: false
          raw: getInvalid
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '393'
            body:
              $ref: '16'
            isNullable: true
        returnType:
          $id: '395'
          body:
            $ref: '16'
          isNullable: true
        serializedName: basic_getInvalid
        url: /complex/basic/invalid
      - $id: '396'
        defaultResponse:
          $id: '400'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get a basic complex type that is empty
        group:
          $id: '398'
          fixed: false
          raw: basic
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '397'
          fixed: false
          raw: getEmpty
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '399'
            body:
              $ref: '16'
            isNullable: true
        returnType:
          $id: '401'
          body:
            $ref: '16'
          isNullable: true
        serializedName: basic_getEmpty
        url: /complex/basic/empty
      - $id: '402'
        defaultResponse:
          $id: '406'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get a basic complex type whose properties are null
        group:
          $id: '404'
          fixed: false
          raw: basic
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '403'
          fixed: false
          raw: getNull
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '405'
            body:
              $ref: '16'
            isNullable: true
        returnType:
          $id: '407'
          body:
            $ref: '16'
          isNullable: true
        serializedName: basic_getNull
        url: /complex/basic/null
      - $id: '408'
        defaultResponse:
          $id: '412'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: >-
          Get a basic complex type while the server doesn't provide a response
          payload
        group:
          $id: '410'
          fixed: false
          raw: basic
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '409'
          fixed: false
          raw: getNotProvided
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '411'
            body:
              $ref: '16'
            isNullable: true
        returnType:
          $id: '413'
          body:
            $ref: '16'
          isNullable: true
        serializedName: basic_getNotProvided
        url: /complex/basic/notprovided
    name:
      $id: '414'
      fixed: false
      raw: Basic
    nameForProperty: Basic
    typeName:
      $id: '415'
      fixed: false
  - $id: '416'
    methods:
      - $id: '417'
        defaultResponse:
          $id: '421'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get complex types with integer properties
        group:
          $id: '419'
          fixed: false
          raw: primitive
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '418'
          fixed: false
          raw: getInt
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '420'
            body:
              $ref: '179'
            isNullable: true
        returnType:
          $id: '422'
          body:
            $ref: '179'
          isNullable: true
        serializedName: primitive_getInt
        url: /complex/primitive/integer
      - $id: '423'
        defaultResponse:
          $id: '431'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Put complex types with integer properties
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '429'
          fixed: false
          raw: primitive
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '428'
          fixed: false
          raw: putInt
        parameters:
          - $id: '424'
            collectionFormat: none
            defaultValue:
              $id: '425'
              fixed: false
            deprecated: false
            documentation:
              $id: '426'
              fixed: false
              raw: Please put -1 and 2
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '179'
            name:
              $id: '427'
              fixed: false
              raw: complexBody
            serializedName: complexBody
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '430'
            isNullable: true
        returnType:
          $id: '432'
          isNullable: true
        serializedName: primitive_putInt
        url: /complex/primitive/integer
      - $id: '433'
        defaultResponse:
          $id: '437'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get complex types with long properties
        group:
          $id: '435'
          fixed: false
          raw: primitive
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '434'
          fixed: false
          raw: getLong
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '436'
            body:
              $ref: '193'
            isNullable: true
        returnType:
          $id: '438'
          body:
            $ref: '193'
          isNullable: true
        serializedName: primitive_getLong
        url: /complex/primitive/long
      - $id: '439'
        defaultResponse:
          $id: '447'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Put complex types with long properties
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '445'
          fixed: false
          raw: primitive
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '444'
          fixed: false
          raw: putLong
        parameters:
          - $id: '440'
            collectionFormat: none
            defaultValue:
              $id: '441'
              fixed: false
            deprecated: false
            documentation:
              $id: '442'
              fixed: false
              raw: Please put 1099511627775 and -999511627788
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '193'
            name:
              $id: '443'
              fixed: false
              raw: complexBody
            serializedName: complexBody
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '446'
            isNullable: true
        returnType:
          $id: '448'
          isNullable: true
        serializedName: primitive_putLong
        url: /complex/primitive/long
      - $id: '449'
        defaultResponse:
          $id: '453'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get complex types with float properties
        group:
          $id: '451'
          fixed: false
          raw: primitive
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '450'
          fixed: false
          raw: getFloat
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '452'
            body:
              $ref: '207'
            isNullable: true
        returnType:
          $id: '454'
          body:
            $ref: '207'
          isNullable: true
        serializedName: primitive_getFloat
        url: /complex/primitive/float
      - $id: '455'
        defaultResponse:
          $id: '463'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Put complex types with float properties
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '461'
          fixed: false
          raw: primitive
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '460'
          fixed: false
          raw: putFloat
        parameters:
          - $id: '456'
            collectionFormat: none
            defaultValue:
              $id: '457'
              fixed: false
            deprecated: false
            documentation:
              $id: '458'
              fixed: false
              raw: Please put 1.05 and -0.003
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '207'
            name:
              $id: '459'
              fixed: false
              raw: complexBody
            serializedName: complexBody
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '462'
            isNullable: true
        returnType:
          $id: '464'
          isNullable: true
        serializedName: primitive_putFloat
        url: /complex/primitive/float
      - $id: '465'
        defaultResponse:
          $id: '469'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get complex types with double properties
        group:
          $id: '467'
          fixed: false
          raw: primitive
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '466'
          fixed: false
          raw: getDouble
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '468'
            body:
              $ref: '221'
            isNullable: true
        returnType:
          $id: '470'
          body:
            $ref: '221'
          isNullable: true
        serializedName: primitive_getDouble
        url: /complex/primitive/double
      - $id: '471'
        defaultResponse:
          $id: '479'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Put complex types with double properties
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '477'
          fixed: false
          raw: primitive
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '476'
          fixed: false
          raw: putDouble
        parameters:
          - $id: '472'
            collectionFormat: none
            defaultValue:
              $id: '473'
              fixed: false
            deprecated: false
            documentation:
              $id: '474'
              fixed: false
              raw: >-
                Please put 3e-100 and
                -0.000000000000000000000000000000000000000000000000000000005
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '221'
            name:
              $id: '475'
              fixed: false
              raw: complexBody
            serializedName: complexBody
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '478'
            isNullable: true
        returnType:
          $id: '480'
          isNullable: true
        serializedName: primitive_putDouble
        url: /complex/primitive/double
      - $id: '481'
        defaultResponse:
          $id: '485'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get complex types with bool properties
        group:
          $id: '483'
          fixed: false
          raw: primitive
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '482'
          fixed: false
          raw: getBool
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '484'
            body:
              $ref: '235'
            isNullable: true
        returnType:
          $id: '486'
          body:
            $ref: '235'
          isNullable: true
        serializedName: primitive_getBool
        url: /complex/primitive/bool
      - $id: '487'
        defaultResponse:
          $id: '495'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Put complex types with bool properties
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '493'
          fixed: false
          raw: primitive
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '492'
          fixed: false
          raw: putBool
        parameters:
          - $id: '488'
            collectionFormat: none
            defaultValue:
              $id: '489'
              fixed: false
            deprecated: false
            documentation:
              $id: '490'
              fixed: false
              raw: Please put true and false
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '235'
            name:
              $id: '491'
              fixed: false
              raw: complexBody
            serializedName: complexBody
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '494'
            isNullable: true
        returnType:
          $id: '496'
          isNullable: true
        serializedName: primitive_putBool
        url: /complex/primitive/bool
      - $id: '497'
        defaultResponse:
          $id: '501'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get complex types with string properties
        group:
          $id: '499'
          fixed: false
          raw: primitive
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '498'
          fixed: false
          raw: getString
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '500'
            body:
              $ref: '249'
            isNullable: true
        returnType:
          $id: '502'
          body:
            $ref: '249'
          isNullable: true
        serializedName: primitive_getString
        url: /complex/primitive/string
      - $id: '503'
        defaultResponse:
          $id: '511'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Put complex types with string properties
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '509'
          fixed: false
          raw: primitive
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '508'
          fixed: false
          raw: putString
        parameters:
          - $id: '504'
            collectionFormat: none
            defaultValue:
              $id: '505'
              fixed: false
            deprecated: false
            documentation:
              $id: '506'
              fixed: false
              raw: 'Please put ''goodrequest'', '''', and null'
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '249'
            name:
              $id: '507'
              fixed: false
              raw: complexBody
            serializedName: complexBody
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '510'
            isNullable: true
        returnType:
          $id: '512'
          isNullable: true
        serializedName: primitive_putString
        url: /complex/primitive/string
      - $id: '513'
        defaultResponse:
          $id: '517'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get complex types with date properties
        group:
          $id: '515'
          fixed: false
          raw: primitive
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '514'
          fixed: false
          raw: getDate
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '516'
            body:
              $ref: '269'
            isNullable: true
        returnType:
          $id: '518'
          body:
            $ref: '269'
          isNullable: true
        serializedName: primitive_getDate
        url: /complex/primitive/date
      - $id: '519'
        defaultResponse:
          $id: '527'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Put complex types with date properties
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '525'
          fixed: false
          raw: primitive
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '524'
          fixed: false
          raw: putDate
        parameters:
          - $id: '520'
            collectionFormat: none
            defaultValue:
              $id: '521'
              fixed: false
            deprecated: false
            documentation:
              $id: '522'
              fixed: false
              raw: Please put '0001-01-01' and '2016-02-29'
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '269'
            name:
              $id: '523'
              fixed: false
              raw: complexBody
            serializedName: complexBody
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '526'
            isNullable: true
        returnType:
          $id: '528'
          isNullable: true
        serializedName: primitive_putDate
        url: /complex/primitive/date
      - $id: '529'
        defaultResponse:
          $id: '533'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get complex types with datetime properties
        group:
          $id: '531'
          fixed: false
          raw: primitive
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '530'
          fixed: false
          raw: getDateTime
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '532'
            body:
              $ref: '283'
            isNullable: true
        returnType:
          $id: '534'
          body:
            $ref: '283'
          isNullable: true
        serializedName: primitive_getDateTime
        url: /complex/primitive/datetime
      - $id: '535'
        defaultResponse:
          $id: '543'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Put complex types with datetime properties
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '541'
          fixed: false
          raw: primitive
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '540'
          fixed: false
          raw: putDateTime
        parameters:
          - $id: '536'
            collectionFormat: none
            defaultValue:
              $id: '537'
              fixed: false
            deprecated: false
            documentation:
              $id: '538'
              fixed: false
              raw: >-
                Please put '0001-01-01T12:00:00-04:00' and
                '2015-05-18T11:38:00-08:00'
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '283'
            name:
              $id: '539'
              fixed: false
              raw: complexBody
            serializedName: complexBody
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '542'
            isNullable: true
        returnType:
          $id: '544'
          isNullable: true
        serializedName: primitive_putDateTime
        url: /complex/primitive/datetime
      - $id: '545'
        defaultResponse:
          $id: '549'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get complex types with datetimeRfc1123 properties
        group:
          $id: '547'
          fixed: false
          raw: primitive
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '546'
          fixed: false
          raw: getDateTimeRfc1123
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '548'
            body:
              $ref: '297'
            isNullable: true
        returnType:
          $id: '550'
          body:
            $ref: '297'
          isNullable: true
        serializedName: primitive_getDateTimeRfc1123
        url: /complex/primitive/datetimerfc1123
      - $id: '551'
        defaultResponse:
          $id: '559'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Put complex types with datetimeRfc1123 properties
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '557'
          fixed: false
          raw: primitive
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '556'
          fixed: false
          raw: putDateTimeRfc1123
        parameters:
          - $id: '552'
            collectionFormat: none
            defaultValue:
              $id: '553'
              fixed: false
            deprecated: false
            documentation:
              $id: '554'
              fixed: false
              raw: >-
                Please put 'Mon, 01 Jan 0001 12:00:00 GMT' and 'Mon, 18 May 2015
                11:38:00 GMT'
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '297'
            name:
              $id: '555'
              fixed: false
              raw: complexBody
            serializedName: complexBody
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '558'
            isNullable: true
        returnType:
          $id: '560'
          isNullable: true
        serializedName: primitive_putDateTimeRfc1123
        url: /complex/primitive/datetimerfc1123
      - $id: '561'
        defaultResponse:
          $id: '565'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get complex types with duration properties
        group:
          $id: '563'
          fixed: false
          raw: primitive
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '562'
          fixed: false
          raw: getDuration
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '564'
            body:
              $ref: '311'
            isNullable: true
        returnType:
          $id: '566'
          body:
            $ref: '311'
          isNullable: true
        serializedName: primitive_getDuration
        url: /complex/primitive/duration
      - $id: '567'
        defaultResponse:
          $id: '575'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Put complex types with duration properties
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '573'
          fixed: false
          raw: primitive
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '572'
          fixed: false
          raw: putDuration
        parameters:
          - $id: '568'
            collectionFormat: none
            defaultValue:
              $id: '569'
              fixed: false
            deprecated: false
            documentation:
              $id: '570'
              fixed: false
              raw: Please put 'P123DT22H14M12.011S'
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '311'
            name:
              $id: '571'
              fixed: false
              raw: complexBody
            serializedName: complexBody
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '574'
            isNullable: true
        returnType:
          $id: '576'
          isNullable: true
        serializedName: primitive_putDuration
        url: /complex/primitive/duration
      - $id: '577'
        defaultResponse:
          $id: '581'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get complex types with byte properties
        group:
          $id: '579'
          fixed: false
          raw: primitive
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '578'
          fixed: false
          raw: getByte
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '580'
            body:
              $ref: '319'
            isNullable: true
        returnType:
          $id: '582'
          body:
            $ref: '319'
          isNullable: true
        serializedName: primitive_getByte
        url: /complex/primitive/byte
      - $id: '583'
        defaultResponse:
          $id: '591'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Put complex types with byte properties
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '589'
          fixed: false
          raw: primitive
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '588'
          fixed: false
          raw: putByte
        parameters:
          - $id: '584'
            collectionFormat: none
            defaultValue:
              $id: '585'
              fixed: false
            deprecated: false
            documentation:
              $id: '586'
              fixed: false
              raw: >-
                Please put non-ascii byte string hex(FF FE FD FC 00 FA F9 F8 F7
                F6)
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '319'
            name:
              $id: '587'
              fixed: false
              raw: complexBody
            serializedName: complexBody
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '590'
            isNullable: true
        returnType:
          $id: '592'
          isNullable: true
        serializedName: primitive_putByte
        url: /complex/primitive/byte
    name:
      $id: '593'
      fixed: false
      raw: Primitive
    nameForProperty: Primitive
    typeName:
      $id: '594'
      fixed: false
  - $id: '595'
    methods:
      - $id: '596'
        defaultResponse:
          $id: '600'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get complex types with array property
        group:
          $id: '598'
          fixed: false
          raw: array
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '597'
          fixed: false
          raw: getValid
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '599'
            body:
              $ref: '327'
            isNullable: true
        returnType:
          $id: '601'
          body:
            $ref: '327'
          isNullable: true
        serializedName: array_getValid
        url: /complex/array/valid
      - $id: '602'
        defaultResponse:
          $id: '610'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Put complex types with array property
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '608'
          fixed: false
          raw: array
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '607'
          fixed: false
          raw: putValid
        parameters:
          - $id: '603'
            collectionFormat: none
            defaultValue:
              $id: '604'
              fixed: false
            deprecated: false
            documentation:
              $id: '605'
              fixed: false
              raw: >-
                Please put an array with 4 items: "1, 2, 3, 4", "", null,
                "&S#$(*Y", "The quick brown fox jumps over the lazy dog"
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '327'
            name:
              $id: '606'
              fixed: false
              raw: complexBody
            serializedName: complexBody
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '609'
            isNullable: true
        returnType:
          $id: '611'
          isNullable: true
        serializedName: array_putValid
        url: /complex/array/valid
      - $id: '612'
        defaultResponse:
          $id: '616'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get complex types with array property which is empty
        group:
          $id: '614'
          fixed: false
          raw: array
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '613'
          fixed: false
          raw: getEmpty
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '615'
            body:
              $ref: '327'
            isNullable: true
        returnType:
          $id: '617'
          body:
            $ref: '327'
          isNullable: true
        serializedName: array_getEmpty
        url: /complex/array/empty
      - $id: '618'
        defaultResponse:
          $id: '626'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Put complex types with array property which is empty
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '624'
          fixed: false
          raw: array
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '623'
          fixed: false
          raw: putEmpty
        parameters:
          - $id: '619'
            collectionFormat: none
            defaultValue:
              $id: '620'
              fixed: false
            deprecated: false
            documentation:
              $id: '621'
              fixed: false
              raw: Please put an empty array
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '327'
            name:
              $id: '622'
              fixed: false
              raw: complexBody
            serializedName: complexBody
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '625'
            isNullable: true
        returnType:
          $id: '627'
          isNullable: true
        serializedName: array_putEmpty
        url: /complex/array/empty
      - $id: '628'
        defaultResponse:
          $id: '632'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: >-
          Get complex types with array property while server doesn't provide a
          response payload
        group:
          $id: '630'
          fixed: false
          raw: array
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '629'
          fixed: false
          raw: getNotProvided
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '631'
            body:
              $ref: '327'
            isNullable: true
        returnType:
          $id: '633'
          body:
            $ref: '327'
          isNullable: true
        serializedName: array_getNotProvided
        url: /complex/array/notprovided
    name:
      $id: '634'
      fixed: false
      raw: Array
    nameForProperty: Array
    typeName:
      $id: '635'
      fixed: false
  - $id: '636'
    methods:
      - $id: '637'
        defaultResponse:
          $id: '641'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get complex types with dictionary property
        group:
          $id: '639'
          fixed: false
          raw: dictionary
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '638'
          fixed: false
          raw: getValid
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '640'
            body:
              $ref: '337'
            isNullable: true
        returnType:
          $id: '642'
          body:
            $ref: '337'
          isNullable: true
        serializedName: dictionary_getValid
        url: /complex/dictionary/typed/valid
      - $id: '643'
        defaultResponse:
          $id: '651'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Put complex types with dictionary property
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '649'
          fixed: false
          raw: dictionary
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '648'
          fixed: false
          raw: putValid
        parameters:
          - $id: '644'
            collectionFormat: none
            defaultValue:
              $id: '645'
              fixed: false
            deprecated: false
            documentation:
              $id: '646'
              fixed: false
              raw: >-
                Please put a dictionary with 5 key-value pairs: "txt":"notepad",
                "bmp":"mspaint", "xls":"excel", "exe":"", "":null
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '337'
            name:
              $id: '647'
              fixed: false
              raw: complexBody
            serializedName: complexBody
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '650'
            isNullable: true
        returnType:
          $id: '652'
          isNullable: true
        serializedName: dictionary_putValid
        url: /complex/dictionary/typed/valid
      - $id: '653'
        defaultResponse:
          $id: '657'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get complex types with dictionary property which is empty
        group:
          $id: '655'
          fixed: false
          raw: dictionary
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '654'
          fixed: false
          raw: getEmpty
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '656'
            body:
              $ref: '337'
            isNullable: true
        returnType:
          $id: '658'
          body:
            $ref: '337'
          isNullable: true
        serializedName: dictionary_getEmpty
        url: /complex/dictionary/typed/empty
      - $id: '659'
        defaultResponse:
          $id: '667'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Put complex types with dictionary property which is empty
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '665'
          fixed: false
          raw: dictionary
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '664'
          fixed: false
          raw: putEmpty
        parameters:
          - $id: '660'
            collectionFormat: none
            defaultValue:
              $id: '661'
              fixed: false
            deprecated: false
            documentation:
              $id: '662'
              fixed: false
              raw: Please put an empty dictionary
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '337'
            name:
              $id: '663'
              fixed: false
              raw: complexBody
            serializedName: complexBody
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '666'
            isNullable: true
        returnType:
          $id: '668'
          isNullable: true
        serializedName: dictionary_putEmpty
        url: /complex/dictionary/typed/empty
      - $id: '669'
        defaultResponse:
          $id: '673'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get complex types with dictionary property which is null
        group:
          $id: '671'
          fixed: false
          raw: dictionary
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '670'
          fixed: false
          raw: getNull
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '672'
            body:
              $ref: '337'
            isNullable: true
        returnType:
          $id: '674'
          body:
            $ref: '337'
          isNullable: true
        serializedName: dictionary_getNull
        url: /complex/dictionary/typed/null
      - $id: '675'
        defaultResponse:
          $id: '679'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: >-
          Get complex types with dictionary property while server doesn't
          provide a response payload
        group:
          $id: '677'
          fixed: false
          raw: dictionary
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '676'
          fixed: false
          raw: getNotProvided
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '678'
            body:
              $ref: '337'
            isNullable: true
        returnType:
          $id: '680'
          body:
            $ref: '337'
          isNullable: true
        serializedName: dictionary_getNotProvided
        url: /complex/dictionary/typed/notprovided
    name:
      $id: '681'
      fixed: false
      raw: Dictionary
    nameForProperty: Dictionary
    typeName:
      $id: '682'
      fixed: false
  - $id: '683'
    methods:
      - $id: '684'
        defaultResponse:
          $id: '688'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get complex types that extend others
        group:
          $id: '686'
          fixed: false
          raw: inheritance
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '685'
          fixed: false
          raw: getValid
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '687'
            body:
              $ref: '78'
            isNullable: true
        returnType:
          $id: '689'
          body:
            $ref: '78'
          isNullable: true
        serializedName: inheritance_getValid
        url: /complex/inheritance/valid
      - $id: '690'
        defaultResponse:
          $id: '698'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Put complex types that extend others
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '696'
          fixed: false
          raw: inheritance
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '695'
          fixed: false
          raw: putValid
        parameters:
          - $id: '691'
            collectionFormat: none
            defaultValue:
              $id: '692'
              fixed: false
            deprecated: false
            documentation:
              $id: '693'
              fixed: false
              raw: >-
                Please put a siamese with id=2, name="Siameee", color=green,
                breed=persion, which hates 2 dogs, the 1st one named "Potato"
                with id=1 and food="tomato", and the 2nd one named "Tomato" with
                id=-1 and food="french fries".
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '78'
            name:
              $id: '694'
              fixed: false
              raw: complexBody
            serializedName: complexBody
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '697'
            isNullable: true
        returnType:
          $id: '699'
          isNullable: true
        serializedName: inheritance_putValid
        url: /complex/inheritance/valid
    name:
      $id: '700'
      fixed: false
      raw: Inheritance
    nameForProperty: Inheritance
    typeName:
      $id: '701'
      fixed: false
  - $id: '702'
    methods:
      - $id: '703'
        defaultResponse:
          $id: '707'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get complex types that are polymorphic
        group:
          $id: '705'
          fixed: false
          raw: polymorphism
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '704'
          fixed: false
          raw: getValid
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '706'
            body:
              $ref: '86'
            isNullable: true
        returnType:
          $id: '708'
          body:
            $ref: '86'
          isNullable: true
        serializedName: polymorphism_getValid
        url: /complex/polymorphism/valid
      - $id: '709'
        defaultResponse:
          $id: '717'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Put complex types that are polymorphic
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '715'
          fixed: false
          raw: polymorphism
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '714'
          fixed: false
          raw: putValid
        parameters:
          - $id: '710'
            collectionFormat: none
            defaultValue:
              $id: '711'
              fixed: false
            deprecated: false
            documentation:
              $id: '712'
              fixed: false
              raw: |-
                Please put a salmon that looks like this:
                {
                        'fishtype':'Salmon',
                        'location':'alaska',
                        'iswild':true,
                        'species':'king',
                        'length':1.0,
                        'siblings':[
                          {
                            'fishtype':'Shark',
                            'age':6,
                            'birthday': '2012-01-05T01:00:00Z',
                            'length':20.0,
                            'species':'predator',
                          },
                          {
                            'fishtype':'Sawshark',
                            'age':105,
                            'birthday': '1900-01-05T01:00:00Z',
                            'length':10.0,
                            'picture': new Buffer([255, 255, 255, 255, 254]).toString('base64'),
                            'species':'dangerous',
                          },
                          {
                            'fishtype': 'goblin',
                            'age': 1,
                            'birthday': '2015-08-08T00:00:00Z',
                            'length': 30.0,
                            'species': 'scary',
                            'jawsize': 5
                          }
                        ]
                      };
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '86'
            name:
              $id: '713'
              fixed: false
              raw: complexBody
            serializedName: complexBody
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '716'
            isNullable: true
        returnType:
          $id: '718'
          isNullable: true
        serializedName: polymorphism_putValid
        url: /complex/polymorphism/valid
      - $id: '719'
        defaultResponse:
          $id: '723'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: >-
          Get complex types that are polymorphic, but not at the root of the
          hierarchy; also have additional properties
        group:
          $id: '721'
          fixed: false
          raw: polymorphism
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '720'
          fixed: false
          raw: getComplicated
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '722'
            body:
              $ref: '106'
            isNullable: true
        returnType:
          $id: '724'
          body:
            $ref: '106'
          isNullable: true
        serializedName: polymorphism_getComplicated
        url: /complex/polymorphism/complicated
      - $id: '725'
        defaultResponse:
          $id: '733'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: >-
          Put complex types that are polymorphic, but not at the root of the
          hierarchy; also have additional properties
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '731'
          fixed: false
          raw: polymorphism
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '730'
          fixed: false
          raw: putComplicated
        parameters:
          - $id: '726'
            collectionFormat: none
            defaultValue:
              $id: '727'
              fixed: false
            deprecated: false
            documentation:
              $id: '728'
              fixed: false
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '106'
            name:
              $id: '729'
              fixed: false
              raw: complexBody
            serializedName: complexBody
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '732'
            isNullable: true
        returnType:
          $id: '734'
          isNullable: true
        serializedName: polymorphism_putComplicated
        url: /complex/polymorphism/complicated
      - $id: '735'
        defaultResponse:
          $id: '743'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: 'Put complex types that are polymorphic, omitting the discriminator'
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '741'
          fixed: false
          raw: polymorphism
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '740'
          fixed: false
          raw: putMissingDiscriminator
        parameters:
          - $id: '736'
            collectionFormat: none
            defaultValue:
              $id: '737'
              fixed: false
            deprecated: false
            documentation:
              $id: '738'
              fixed: false
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '106'
            name:
              $id: '739'
              fixed: false
              raw: complexBody
            serializedName: complexBody
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '742'
            body:
              $ref: '106'
            isNullable: true
        returnType:
          $id: '744'
          body:
            $ref: '106'
          isNullable: true
        serializedName: polymorphism_putMissingDiscriminator
        url: /complex/polymorphism/missingdiscriminator
      - $id: '745'
        defaultResponse:
          $id: '753'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: >-
          Put complex types that are polymorphic, attempting to omit required
          'birthday' field - the request should not be allowed from the client
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '751'
          fixed: false
          raw: polymorphism
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '750'
          fixed: false
          raw: putValidMissingRequired
        parameters:
          - $id: '746'
            collectionFormat: none
            defaultValue:
              $id: '747'
              fixed: false
            deprecated: false
            documentation:
              $id: '748'
              fixed: false
              raw: >-
                Please attempt put a sawshark that looks like this, the client
                should not allow this data to be sent:

                {
                    "fishtype": "sawshark",
                    "species": "snaggle toothed",
                    "length": 18.5,
                    "age": 2,
                    "birthday": "2013-06-01T01:00:00Z",
                    "location": "alaska",
                    "picture": base64(FF FF FF FF FE),
                    "siblings": [
                        {
                            "fishtype": "shark",
                            "species": "predator",
                            "birthday": "2012-01-05T01:00:00Z",
                            "length": 20,
                            "age": 6
                        },
                        {
                            "fishtype": "sawshark",
                            "species": "dangerous",
                            "picture": base64(FF FF FF FF FE),
                            "length": 10,
                            "age": 105
                        }
                    ]
                }
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '86'
            name:
              $id: '749'
              fixed: false
              raw: complexBody
            serializedName: complexBody
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '752'
            isNullable: true
        returnType:
          $id: '754'
          isNullable: true
        serializedName: polymorphism_putValidMissingRequired
        url: /complex/polymorphism/missingrequired/invalid
    name:
      $id: '755'
      fixed: false
      raw: Polymorphism
    nameForProperty: Polymorphism
    typeName:
      $id: '756'
      fixed: false
  - $id: '757'
    methods:
      - $id: '758'
        defaultResponse:
          $id: '762'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get complex types that are polymorphic and have recursive references
        group:
          $id: '760'
          fixed: false
          raw: polymorphicrecursive
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '759'
          fixed: false
          raw: getValid
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '761'
            body:
              $ref: '86'
            isNullable: true
        returnType:
          $id: '763'
          body:
            $ref: '86'
          isNullable: true
        serializedName: polymorphicrecursive_getValid
        url: /complex/polymorphicrecursive/valid
      - $id: '764'
        defaultResponse:
          $id: '772'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Put complex types that are polymorphic and have recursive references
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '770'
          fixed: false
          raw: polymorphicrecursive
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '769'
          fixed: false
          raw: putValid
        parameters:
          - $id: '765'
            collectionFormat: none
            defaultValue:
              $id: '766'
              fixed: false
            deprecated: false
            documentation:
              $id: '767'
              fixed: false
              raw: |-
                Please put a salmon that looks like this:
                {
                    "fishtype": "salmon",
                    "species": "king",
                    "length": 1,
                    "age": 1,
                    "location": "alaska",
                    "iswild": true,
                    "siblings": [
                        {
                            "fishtype": "shark",
                            "species": "predator",
                            "length": 20,
                            "age": 6,
                            "siblings": [
                                {
                                    "fishtype": "salmon",
                                    "species": "coho",
                                    "length": 2,
                                    "age": 2,
                                    "location": "atlantic",
                                    "iswild": true,
                                    "siblings": [
                                        {
                                            "fishtype": "shark",
                                            "species": "predator",
                                            "length": 20,
                                            "age": 6
                                        },
                                        {
                                            "fishtype": "sawshark",
                                            "species": "dangerous",
                                            "length": 10,
                                            "age": 105
                                        }
                                    ]
                                },
                                {
                                    "fishtype": "sawshark",
                                    "species": "dangerous",
                                    "length": 10,
                                    "age": 105
                                }
                            ]
                        },
                        {
                            "fishtype": "sawshark",
                            "species": "dangerous",
                            "length": 10,
                            "age": 105
                        }
                    ]
                }
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '86'
            name:
              $id: '768'
              fixed: false
              raw: complexBody
            serializedName: complexBody
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '771'
            isNullable: true
        returnType:
          $id: '773'
          isNullable: true
        serializedName: polymorphicrecursive_putValid
        url: /complex/polymorphicrecursive/valid
    name:
      $id: '774'
      fixed: false
      raw: Polymorphicrecursive
    nameForProperty: Polymorphicrecursive
    typeName:
      $id: '775'
      fixed: false
  - $id: '776'
    methods:
      - $id: '777'
        defaultResponse:
          $id: '781'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Get complex types that have readonly properties
        group:
          $id: '779'
          fixed: false
          raw: readonlyproperty
        hidden: false
        httpMethod: get
        isAbsoluteUrl: false
        name:
          $id: '778'
          fixed: false
          raw: getValid
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '780'
            body:
              $ref: '347'
            isNullable: true
        returnType:
          $id: '782'
          body:
            $ref: '347'
          isNullable: true
        serializedName: readonlyproperty_getValid
        url: /complex/readonlyproperty/valid
      - $id: '783'
        defaultResponse:
          $id: '791'
          body:
            $ref: '2'
          isNullable: true
        deprecated: false
        description: Put complex types that have readonly properties
        extensions:
          x-ms-requestBody-index: '0'
        group:
          $id: '789'
          fixed: false
          raw: readonlyproperty
        hidden: false
        httpMethod: put
        isAbsoluteUrl: false
        name:
          $id: '788'
          fixed: false
          raw: putValid
        parameters:
          - $id: '784'
            collectionFormat: none
            defaultValue:
              $id: '785'
              fixed: false
            deprecated: false
            documentation:
              $id: '786'
              fixed: false
            extensions:
              x-ms-requestBody-name: complexBody
            isConstant: false
            isRequired: true
            location: body
            modelType:
              $ref: '347'
            name:
              $id: '787'
              fixed: false
              raw: complexBody
            serializedName: complexBody
        requestContentType: application/json; charset=utf-8
        responseContentTypes:
          - application/json
        responses:
          OK:
            $id: '790'
            isNullable: true
        returnType:
          $id: '792'
          isNullable: true
        serializedName: readonlyproperty_putValid
        url: /complex/readonlyproperty/valid
    name:
      $id: '793'
      fixed: false
      raw: Readonlyproperty
    nameForProperty: Readonlyproperty
    typeName:
      $id: '794'
      fixed: false
properties:
  - $id: '361'
    collectionFormat: none
    defaultValue:
      $id: '362'
      fixed: false
      raw: 2014-04-01-preview
    deprecated: false
    documentation:
      $id: '363'
      fixed: false
      raw: API ID.
    isConstant: true
    isReadOnly: false
    isRequired: true
    modelType:
      $id: '365'
      $type: PrimaryType
      deprecated: false
      knownPrimaryType: string
      name:
        $id: '366'
        fixed: false
        raw: String
    name:
      $id: '364'
      fixed: false
      raw: api-version
    realPath:
      - api-version
    serializedName: api-version
